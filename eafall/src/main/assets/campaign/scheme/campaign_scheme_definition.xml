<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="campaigns">
        <xs:complexType>
            <xs:sequence>

                <xs:element name="background" type="xs:string"/>
                <xs:element name="parallax_background" type="xs:boolean"/>

                <!-- is an element which is displayed on screen and cam contain mission inside or be a proxy to another campaigns with missions -->
                <xs:element name="campaign" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="name" type="xs:string"/>
                            <xs:element name="picture" type="xs:string"/>
                            <xs:element name="width" type="xs:integer"/>
                            <xs:element name="height" type="xs:integer"/>
                            <xs:element name="rotation" maxOccurs="1" minOccurs="0"
                                        type="xs:nonNegativeInteger"/>
                            <xs:element name="position">
                                <xs:complexType>
                                    <xs:sequence maxOccurs="1" minOccurs="1">
                                        <xs:element name="x" type="xs:float"/>
                                        <xs:element name="y" type="xs:float"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                            <!-- if campaign have mission element then this is a mission in real (or mission-campaign) what ever -->
                            <xs:element name="mission_details" maxOccurs="1" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="name" type="xs:string"/>
                                        <xs:element name="game_handler" maxOccurs="1"
                                                    minOccurs="0" type="xs:string"/>
                                        <xs:element name="player_alliance" type="xs:string"/>
                                        <xs:element name="player_available_buildings"
                                                    minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="player_planet" type="xs:string"/>
                                        <xs:element name="player_start_money" minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="opponent_alliance" type="xs:string"/>
                                        <xs:element name="opponent_available_buildings"
                                                    minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="opponent_planet" type="xs:string"/>
                                        <xs:element name="opponent_start_money" minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="max_oxygen" minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="planet_health" minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="offensive_units_limit" minOccurs="0"
                                                    type="xs:integer"/>
                                        <xs:element name="enemy_logic_handler" minOccurs="0"
                                                    type="xs:string"/>
                                        <xs:element name="star_code_name" minOccurs="0"
                                                    type="xs:string"/>
                                        <xs:element name="star_constellation" minOccurs="0"
                                                    type="xs:string"/>
                                        <xs:element name="blue_star" minOccurs="0"
                                                    type="xs:boolean"/>
                                        <xs:element name="single_way" minOccurs="0"
                                                    type="xs:boolean"/>
                                        <xs:element name="suppressor" maxOccurs="1" minOccurs="0"
                                                    type="xs:boolean"/>
                                        <!-- mission type, time and all addition params -->
                                        <xs:element name="definition">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <!-- mission time limit -->
                                                    <xs:element name="time_limit" minOccurs="0"
                                                                type="xs:nonNegativeInteger"/>
                                                    <!--
                                                    type: collect 500 gold,
                                                    survive for some time,
                                                    win only with particular units,
                                                    default - destroy enemies
                                                    -->
                                                    <xs:element name="type" type="xs:string"/>
                                                    <!--
                                                    additional field used to
                                                    add mission description.
                                                    E.g. if the goal to win with particular unit type
                                                    then here will be the unit type
                                                    -->
                                                    <xs:element name="value" minOccurs="0"
                                                                type="xs:integer"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="screen" type="xs:nonNegativeInteger" use="required"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="object" maxOccurs="unbounded" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="screen" type="xs:integer"/>
                            <xs:element name="picture" type="xs:string"/>
                            <xs:element name="width" type="xs:integer"/>
                            <xs:element name="height" type="xs:integer"/>
                            <xs:element name="rotation" maxOccurs="1" minOccurs="0"
                                        type="xs:nonNegativeInteger"/>
                            <xs:element name="radius" maxOccurs="1" minOccurs="0"
                                        type="xs:nonNegativeInteger"/>
                            <xs:element name="duration" maxOccurs="1" minOccurs="0"
                                        type="xs:nonNegativeInteger"/>
                            <xs:element name="position">
                                <xs:complexType>
                                    <xs:sequence maxOccurs="1" minOccurs="1">
                                        <xs:element name="x" type="xs:float"/>
                                        <xs:element name="y" type="xs:float"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>